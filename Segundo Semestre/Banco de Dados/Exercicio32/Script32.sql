SET SQL_SAFE_UPDATES = 0;
SET GLOBAL log_bin_trust_function_creators = 1;

DROP DATABASE IF EXISTS DBEXERCICIO32;
CREATE DATABASE DBEXERCICIO32;
USE DBEXERCICIO32;

CREATE TABLE VALORES (
NUMERO_1 INT
, NUMERO_2 INT
);

INSERT INTO VALORES VALUES(ROUND(RAND() * 100, 2), ROUND(RAND() * 100, 2));
INSERT INTO VALORES VALUES(ROUND(RAND() * 100, 2), ROUND(RAND() * 100, 2));
INSERT INTO VALORES VALUES(ROUND(RAND() * 100, 2), ROUND(RAND() * 100, 2));
INSERT INTO VALORES VALUES(ROUND(RAND() * 100, 2), ROUND(RAND() * 100, 2));
INSERT INTO VALORES VALUES(ROUND(RAND() * 100, 2), ROUND(RAND() * 100, 2));

DELIMITER $$

CREATE FUNCTION FN_ADICAO(pNUMERO_A INT, pNUMERO_B INT) RETURNS INT
BEGIN
DECLARE vRESULTADO INT;
SET vRESULTADO = pNUMERO_A + pNUMERO_B;
RETURN vRESULTADO;

END $$

CREATE FUNCTION FN_SUBTRACAO(pNUMERO_A INT, pNUMERO_B INT) RETURNS INT
BEGIN
DECLARE vRESULTADO INT;
SET vRESULTADO = pNUMERO_A - pNUMERO_B;
RETURN vRESULTADO;

END $$

CREATE FUNCTION FN_MULTIPLICACAO(pNUMERO_A INT, pNUMERO_B INT) RETURNS INT
BEGIN
DECLARE vRESULTADO INT;
SET vRESULTADO = pNUMERO_A * pNUMERO_B;
RETURN vRESULTADO;

END $$

CREATE FUNCTION FN_DIVISAO(pNUMERO_A INT, pNUMERO_B INT) RETURNS DECIMAL(8, 2)
BEGIN
DECLARE vRESULTADO DECIMAL(8, 2);
SET vRESULTADO = pNUMERO_A / pNUMERO_B;
RETURN vRESULTADO;

END $$

CREATE FUNCTION FN_CALCULATOR(pNUMERO_A INT, pNUMERO_B INT, pOPERADO CHAR(1)) RETURNS DECIMAL(8, 2)
BEGIN
DECLARE vRESULTADO DECIMAL(8, 2);

CASE pOPERADO
WHEN '+' THEN
SET vRESULTADO = FN_ADICAO(pNUMERO_A, pNUMERO_B);
WHEN '-' THEN
SET vRESULTADO = FN_SUBTRACAO(pNUMERO_A, pNUMERO_B);
WHEN '*' THEN
SET vRESULTADO = FN_MULTIPLICACAO(pNUMERO_A, pNUMERO_B);
WHEN '/' THEN
SET vRESULTADO = FN_DIVISAO(pNUMERO_A, pNUMERO_B);
END CASE;
RETURN vRESULTADO;

END $$

CREATE FUNCTION FN_PRIMO(pNUMERO INT) RETURNS CHAR (1)
BEGIN
DECLARE vDIVISOR INT;
DECLARE vPRIMO CHAR(1);

SET vDIVISOR = pNUMERO - 1;
SET vPRIMO = 'S';

WHILE (vDIVISOR > 1 AND vPRIMO = 'S') DO
IF(pNUMERO % vDIVISOR = 0) THEN
SET vPRIMO = 'N';
END IF;
SET vDIVISOR = vDIVISOR - 1;
END WHILE;

RETURN vPRIMO;

END $$

CREATE FUNCTION FN_IDADE(pDTNASCIMENTO DATE ) RETURNS INT
BEGIN
DECLARE vANO_NASCIMENTO INT;
DECLARE vANO_ATUA INT;
DECLARE vIDADE INT;

SET vANO_NASCIMENTO = YEAR(pDTNASCIMENTO);
SET vANO_ATUA = YEAR(NOW());
SET vIDADE = vANO_ATUA - vANO_NASCIMENTO;

IF(DATE_ADD(pDTNASCIMENTO, INTERVAL vIDADE YEAR) > NOW()) THEN
SET vIDADE = vIDADE - 1;
END IF;

RETURN vIDADE;
END $$
DELIMITER ;

-- SELECT FN_ADICAO(5, 3);

SELECT
NUMERO_1
, NUMERO_2
, FN_ADICAO(NUMERO_1, NUMERO_2) AS SOMA
, FN_SUBTRACAO(NUMERO_1, NUMERO_2) AS SUBTRACAO
, FN_MULTIPLICACAO(NUMERO_1, NUMERO_2) AS MULTIPLICACAO
, FN_DIVISAO(NUMERO_1, NUMERO_2) AS DIVISAO
, FN_CALCULATOR(NUMERO_1, NUMERO_2, '*') AS '?'
, FN_PRIMO(NUMERO_1) AS PRIMO
FROM
VALORES;

-- 07

SELECT FN_IDADE('2000-04-27');