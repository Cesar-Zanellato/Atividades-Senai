SET SQL_SAFE_UPDATES = 0;
DROP DATABASE IF EXISTS DBALUNO;
CREATE DATABASE DBALUNO;
USE DBALUNO;

CREATE TABLE ALUNO (
	IDALUNO INT NOT NULL AUTO_INCREMENT
	, NOME VARCHAR(20) NOT NULL
	, SEXO CHAR(1)
	, IDADE INT
	, CIDADE VARCHAR(20)
    , PRIMARY KEY (IDALUNO)
);

INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('ANDERSON', 17, 'M','PALHOCA');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('CESAR', 21, 'M', 'SAO JOSE');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('DANIEL', 19, 'M', 'PALHOCA');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('DIEGO', 19, 'M', 'BLUMENAU');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('EDUARDO', 20, 'M', NULL);
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('GABRIEL', 19, 'M', 'TUBARAO');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('JOAO', 18, 'M', 'SAO JOSE');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('LEONARDO', 19, 'M', NULL);
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('LUCAS', 20, 'M', 'BLUMENAU');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('PRISCILA', 19, 'F', 'PALHOÃ‡A');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('RENATA', 21, 'F', 'TUBARAO');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('MARIA', 22, 'F', 'BLUMENAU');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('TANIA', 19, 'F', 'SAO JOSE');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('CARLOS', 22, 'M', 'TUBARAO');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('JOSE', 19, 'M', 'PALHOCA');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('MARISA', 19, 'F', NULL);
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('AMANDA', 20, 'F', NULL);
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('JOANA', 19, 'F', NULL);
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('ALICE', 21, 'F', 'SAO JOSE');
INSERT INTO ALUNO (NOME, IDADE, SEXO, CIDADE)VALUES('TADEU', 18, 'M', 'TUBARAO');


-- 01
SELECT 
	COUNT(IDALUNO)
    , SEXO
FROM
	ALUNO
GROUP BY
	SEXO
;

-- 02
SELECT
	COUNT(IDALUNO)
    , IDADE
FROM
	ALUNO
GROUP BY
	IDADE
ORDER BY IDADE;

-- 03
SELECT
	COUNT(IDALUNO)
    , CIDADE
FROM
	ALUNO
WHERE
	CIDADE IS NOT NULL
GROUP BY 
	CIDADE
;

-- 04
SELECT 
	COUNT(IDALUNO)
FROM
	ALUNO
WHERE
	CIDADE IS NULL
;

-- 05
SELECT
	AVG(IDADE)
    , SEXO
FROM 
	ALUNO
GROUP BY
	SEXO
;

-- 06
SELECT
	COUNT(IDALUNO)
    , AVG(IDADE)
FROM
	ALUNO
WHERE
	CIDADE = 'FLORIANOPOLIS'
;

-- 07
SELECT
	COUNT(IDALUNO)
    , SEXO
FROM
	ALUNO
WHERE
	IDADE <> 18
GROUP BY
	SEXO
;

-- 08
SELECT
	MIN(IDADE)
FROM
	ALUNO
WHERE
	CIDADE = 'SAO JOSE'
    AND IDADE < 20
    AND SEXO = 'M'
;

-- 09
SELECT
	COUNT(IDALUNO)
FROM
	ALUNO
WHERE
	(IDADE > 20 AND SEXO = 'F')
    OR (IDADE > 17 AND SEXO = 'M')
;

-- 10
SELECT 
	MAX(IDADE) AS MAIOR
    , MIN(IDADE) AS MENOR
FROM
	ALUNO
WHERE
	SEXO = 'F'
;

-- 11
SELECT 
	SUM(IDADE) AS TOTAL_IDADE
FROM
	ALUNO
WHERE
	CIDADE = 'BLUMENAU'
;

-- 12 
SELECT
	COUNT(IDALUNO)
	, SEXO
FROM
	ALUNO
WHERE
	IDADE BETWEEN 15 AND 18
    AND CIDADE <> 'PALHOCA'
GROUP BY
	SEXO;
    
-- 13
SELECT
	COUNT(IDALUNO)
	, CIDADE
FROM
	ALUNO
WHERE 
	CIDADE IS NOT NULL
GROUP BY
	CIDADE
HAVING
	COUNT(IDALUNO) > 3
;

-- 14
SELECT
	COUNT(IDALUNO)
    , IDADE
FROM
	ALUNO
GROUP BY
	IDADE
ORDER BY
	IDADE DESC;
    
-- 15
SELECT
	CIDADE
    , COUNT(IDALUNO)
    , AVG(IDADE)
    , MAX(IDADE)
    , MIN(IDADE)
FROM
	ALUNO
GROUP BY
	CIDADE
HAVING
	COUNT(IDALUNO) > 3
;